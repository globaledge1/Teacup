# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
replay_pid*
// Teacup Smart Contract
contract Teacup {
    struct Message {
        address sender;
        address recipient;
        string content;
        uint timestamp;
    }

    mapping(address => Message[]) public inbox;
    mapping(address => Message[]) public outbox;

    event MessageSent(address indexed sender, address indexed recipient, string content);

    function sendMessage(address _recipient, string memory _content) public {
        Message memory newMessage = Message(msg.sender, _recipient, _content, block.timestamp);
        inbox[_recipient].push(newMessage);
        outbox[msg.sender].push(newMessage);
        emit MessageSent(msg.sender, _recipient, _content);
    }

    function getInbox() public view returns (Message[] memory) {
        return inbox[msg.sender];
    }

    function getOutbox() public view returns (Message[] memory) {
        return outbox[msg.sender];
    }
}

// Teacup Frontend (HTML, CSS, JavaScript)
// index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teacup Messenger</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Teacup Messenger</h1>
        <div class="inbox">
            <h2>Inbox</h2>
            <ul id="inboxList"></ul>
        </div>
        <div class="outbox">
            <h2>Outbox</h2>
            <ul id="outboxList"></ul>
        </div>
        <div class="compose">
            <h2>Compose Message</h2>
            <input type="text" id="recipientAddress" placeholder="Recipient Address">
            <textarea id="messageContent" placeholder="Message Content"></textarea>
            <button onclick="sendMessage()">Send</button>
        </div>
    </div>
    <script src="web3.min.js"></script>
    <script src="app.js"></script>
</body>
</html>

// styles.css
.container {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
    font-family: Arial, sans-serif;
}

.inbox, .outbox, .compose {
    margin-bottom: 20px;
}

ul {
    list-style-type: none;
    padding: 0;
}

textarea {
    width: 100%;
    height: 100px;
    margin-bottom: 10px;
}

button {
    padding: 10px 20px;
    background-color: #007bff;
    color: #fff;
    border: none;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

// app.js
window.addEventListener('load', function() {
    // Connect to Web3 provider
    if (typeof web3 !== 'undefined') {
        web3 = new Web3(web3.currentProvider);
    } else {
        // Set the provider you want from Web3.providers
        // For example:
        // web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
        console.error('Web3 provider not found!');
    }

    // Load Teacup contract
    var contractAddress = 'CONTRACT_ADDRESS'; // Replace with your contract address
    var contractABI = CONTRACT_ABI; // Replace with your contract ABI
    var teacupContract = new web3.eth.Contract(contractABI, contractAddress);

    // Display inbox and outbox messages
    displayInbox();
    displayOutbox();
});

function displayInbox() {
    teacupContract.methods.getInbox().call(function(error, result) {
        if (!error) {
            result.forEach(function(message) {
                // Display each message in the inbox
                console.log(message);
                // Example: append message to #inboxList
                // document.getElementById('inboxList').innerHTML += '<li>' + message.content + '</li>';
            });
        } else {
            console.error('Error fetching inbox messages:', error);
        }
    });
}

function displayOutbox() {
    teacupContract.methods.getOutbox().call(function(error, result) {
        if (!error) {
            result.forEach(function(message) {
                // Display each message in the outbox
                console.log(message);
                // Example: append message to #outboxList
                // document.getElementById('outboxList').innerHTML += '<li>' + message.content + '</li>';
            });
        } else {
            console.error('Error fetching outbox messages:', error);
        }
    });
}

function sendMessage() {
    var recipientAddress = document.getElementById('recipientAddress').value;
    var messageContent = document.getElementById('messageContent').value;

    // Call Teacup smart contract to send message
    teacupContract.methods.sendMessage(recipientAddress, messageContent).send({from: web3.eth.defaultAccount}, function(error, transactionHash) {
        if (!error) {
            console.log('Message sent:', transactionHash);
            // Display success message or update UI
        } else {
            console.error('Error sending message:', error);
            // Display error message or handle error
        }
    });
}
